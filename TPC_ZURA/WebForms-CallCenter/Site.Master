<%@ Master Language="C#" AutoEventWireup="true" CodeBehind="Site.master.cs" Inherits="WebForms_CallCenter.SiteMaster" %>

<!DOCTYPE html>

<html lang="es">
<head runat="server">
    <link href="https://fonts.googleapis.com/css?family=Material+Icons" rel="stylesheet">
    <link href="https://use.fontawesome.com/releases/v5.0.13/css/all.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify/dist/vuetify.min.css" rel="stylesheet">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
    <title>Login</title>
    <style>
        
        .fondoDrawer {
            background: url('fondo.png') no-repeat center center fixed;
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
        }
        .fondoTicket {
            background: url('fondo20.jpg') no-repeat center center fixed;
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
        }
        .fondoTicketCerrado {
            background: url('fondo23.png') no-repeat center center fixed;
            -webkit-background-size: cover;
            -moz-background-size: cover;
            -o-background-size: cover;
            background-size: cover;
        }
    </style>
</head>
<body>

    <div id="app">
        <v-app id="inspire">
            <v-snackbar v-model="alerta.estado" :color="alerta.color" top right :timeout="alerta.timeout"> {{ alerta.text }} </v-snackbar>
            <v-navigation-drawer class="fondoDrawer" dark
              fixed
              v-model="drawer"
              app
            >
              <v-list dense>
                <v-list-tile v-for="item in menus" :to="item.to">
                  <v-list-tile-action>
                    <v-icon> {{ item.icono }} </v-icon>
                  </v-list-tile-action>
                  <v-list-tile-content>
                    <v-list-tile-title> {{ item.nombre  }} </v-list-tile-title>
                  </v-list-tile-content>
                </v-list-tile>
                
              </v-list>
            </v-navigation-drawer>
            <v-toolbar color="primary" dark fixed app>
              <%--<v-icon @click.stop="drawer = !drawer">fas fa-bars</v-icon>--%>
              <v-toolbar-title>Sus reclamos de cliente</v-toolbar-title>
              <v-spacer></v-spacer>
              <span> {{ Nombres }} </span>
              <v-btn flat href="/Logout">
                  <v-icon>
                      fas fa-sign-in-alt
                  </v-icon>
              </v-btn>
            </v-toolbar>
            <v-content>
                <v-container>
                    <router-view :usuario="usuario"></router-view>
                </v-container>
            </v-content>
    <asp:ContentPlaceHolder ID="MainContent" runat="server">
    </asp:ContentPlaceHolder>
        </v-app>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js"></script>
    <script src="https://unpkg.com/vue-router/dist/vue-router.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify/dist/vuetify.js"></script>
    <script src="/Scripts/VerAbiertos.js"></script>
    <script src="/Scripts/VerCerrados.js"></script>
    <script src="/Scripts/inicio.js"></script>
    <script>
        const routes = [
            { path: '/VerAbiertos', component: Abiertos('<%= ResolveUrl("Abiertos.aspx/VerTodos") %>', '<%= ResolveUrl("Abiertos.aspx/TodasIncidencias") %>', '<%= ResolveUrl("Abiertos.aspx/TodasPrioridades") %>', '<%= ResolveUrl("Abiertos.aspx/UsAAsignar") %>', '<%= ResolveUrl("Abiertos.aspx/AltaRec") %>') },
            { path: '/VerCerrados', component: Cerrados('<%= ResolveUrl("Cerrados.aspx/VerTodos") %>') },
            { path: '/', component: Inicio() }
        ]
        const router = new VueRouter({
          routes
        })
        let app = new Vue({
            el: '#app',
            router,
            data() {
                return {
                    alerta: {
                        estado: false,
                        timeout: 3000,
                        text: '',
                        color: ''
                    },
                    drawer: true,
                    menus: [
                        { nombre: 'Inicio', icono: 'fas fa-home', to: '/' },
                        { nombre: 'Ver reclamos abiertos', icono: 'fas fa-list', to: '/VerAbiertos' },
                        { nombre: 'Ver reclamos cerrados', icono: 'fas fa-list-alt', to: '/VerCerrados' }
                    ],
                    usuario: {}
                }
            },
            computed: {
                Nombres() {
                    return `${this.usuario.apellido}, ${this.usuario.nombre}`
                }
            },
            created() {
                document.title = 'Inicio'
                fetch('<%= ResolveUrl("Default.aspx/ElUsuario") %>', {
                    method: 'POST',
                    body: `{}`,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    return response.json()
                })
                .then(res => {
                    res = res.d
                    this.usuario = res
                })

            },
            methods: {
                SetSnack(texto, color) {
                    this.alerta.text = texto
                    this.alerta.color = color
                    this.alerta.estado = true
                }
            }
        })
    </script>
</body>
</html>
